# BIBLIOGRAFIA / NETOGRAFIA

## Biblioteki i Narzędzia Zewnętrzne

1.  **javascript-lp-solver (solver.js)**
    *   Opis: Biblioteka JavaScript do rozwiązywania problemów programowania liniowego (Linear Programming - LP) i programowania liniowego mieszanego całkowitoliczbowego (Mixed Integer Linear Programming - MILP). Wykorzystana w module Optymalizacji Produkcji oraz potencjalnie w module Problemu Rozkroju do formułowania i rozwiązywania modeli optymalizacyjnych.
    *   Źródło: Dostępna na platformie GitHub oraz poprzez menedżery pakietów npm.
    *   Przykładowy link (może wymagać aktualizacji do konkretnego używanego forka/wersji): [https://github.com/JWally/jsLPSolver](https://github.com/JWally/jsLPSolver)

2.  **Plotly.js**
    *   Opis: Wysokopoziomowa, deklaratywna biblioteka do tworzenia interaktywnych wizualizacji i wykresów w JavaScript. Używana w aplikacji do generowania wykresów słupkowych i radarowych w module AHP oraz wykresów dwuwymiarowych (przestrzeń rozwiązań, punkt optymalny) w module Optymalizacji Produkcji.
    *   Źródło: Oficjalna strona projektu Plotly.
    *   Link: [https://plotly.com/javascript/](https://plotly.com/javascript/)

## Technologie i Standardy Webowe

1.  **HTML5 (HyperText Markup Language 5)**
    *   Opis: Podstawowy język znaczników używany do strukturyzacji treści aplikacji webowej. Wykorzystano semantyczne elementy HTML5 do budowy interfejsu użytkownika.
    *   Źródło: World Wide Web Consortium (W3C).
    *   Link: [https://www.w3.org/TR/html52/](https://www.w3.org/TR/html52/)

2.  **CSS3 (Cascading Style Sheets 3)**
    *   Opis: Język stylów używany do opisu prezentacji dokumentów HTML. Wykorzystany do stylizacji wszystkich elementów wizualnych aplikacji, w tym layoutu, kolorów, czcionek oraz specyficznych komponentów, takich jak gradientowa skala AHP.
    *   Źródło: World Wide Web Consortium (W3C).
    *   Link: [https://www.w3.org/Style/CSS/Overview.en.html](https://www.w3.org/Style/CSS/Overview.en.html)

3.  **JavaScript (ECMAScript)**
    *   Opis: Podstawowy język programowania po stronie klienta, używany do implementacji całej logiki aplikacji, w tym algorytmów obliczeniowych modułów AHP, Problemu Rozkroju, Optymalizacji Produkcji, obsługi interfejsu użytkownika, komunikacji z bibliotekami zewnętrznymi oraz dynamicznych modyfikacji DOM.
    *   Źródło: Standard rozwijany przez Ecma International (TC39).
    *   Link: [https://www.ecma-international.org/publications-and-standards/standards/ecma-262/](https://www.ecma-international.org/publications-and-standards/standards/ecma-262/)

## Konfiguracja Środowiska Projektu

1.  **Plik `.nojekyll` (w kontekście GitHub Pages)**
    *   Opis: Pusty plik umieszczany w głównym katalogu repozytorium GitHub, jeśli projekt jest hostowany na GitHub Pages. Jego obecność informuje GitHub Pages, aby nie przetwarzało strony za pomocą Jekyll (generatora stron statycznych). Jest to istotne, gdy strona jest czysto statycznym HTML/CSS/JS lub używa innego systemu budowania.
    *   Zastosowanie: Zapewnienie poprawnego serwowania plików aplikacji jako standardowych zasobów statycznych przez GitHub Pages. 